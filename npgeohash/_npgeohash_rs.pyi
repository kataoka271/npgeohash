from typing import Iterable

import numpy as np
from numpy.typing import NDArray

def encode(lat: float, lon: float, precision: int) -> str: ...
def encode_array(arr: NDArray[np.float64], precision: int) -> list[str]: ...
def to_bounds(code: str) -> tuple[float, float, float, float]: ...
def neighbors(code: str) -> Iterable[str]: ...
def create_rect(bounds: tuple[float, float, float, float], precision: int) -> list[str]: ...
def create_circle(lat: float, lon: float, radius: float, precision: int) -> list[str]: ...
def compress(codes: Iterable[str], accuracy: float) -> list[str]: ...
def many_neighbors(codes: Iterable[str]) -> list[str]: ...
def isin(poi: Iterable[str], codes: Iterable[str]) -> list[bool]: ...
def isin_circle(poi: Iterable[str], lat: float, lon: float, radius: float, precision: int) -> list[bool]: ...
